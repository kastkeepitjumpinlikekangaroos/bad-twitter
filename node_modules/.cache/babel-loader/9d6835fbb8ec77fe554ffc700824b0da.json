{"ast":null,"code":"import _classCallCheck from\"/home/owen/pres/bad-twitter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/owen/pres/bad-twitter/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/owen/pres/bad-twitter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/owen/pres/bad-twitter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/owen/pres/bad-twitter/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import'./App.css';var BASE_URL='http://localhost:8080';var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);function App(props){var _this;_classCallCheck(this,App);_this=_possibleConstructorReturn(this,_getPrototypeOf(App).call(this,props));_this.header=function(){return React.createElement(\"div\",{className:\"header\"},React.createElement(\"h1\",null,\"Welcome to bad-twitter \",_this.state.user||''));};_this.body=function(){var _this$state=_this.state,view=_this$state.view,allTweets=_this$state.allTweets;console.log(allTweets);if(view==='login')return _this.loginScreen();if(view==='viewing')return _this.browsingTweetsScreen();if(view==='tweeting')return _this.sendTweetScreen();};_this.loginScreen=function(){return React.createElement(\"form\",{onSubmit:_this.login},React.createElement(\"h1\",null,\"Username:\"),React.createElement(\"input\",{className:\"text-input\",type:\"text\",name:\"username\",value:_this.state.usernameInput,onChange:function onChange(e){return _this.setState({usernameInput:e.target.value});}}),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"input\",{className:\"button\",type:\"submit\",value:\"Submit\"}));};_this.browsingTweetsScreen=function(){return React.createElement(\"div\",null,_this.displayTweets(),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"button\",{className:\"button\",onClick:function onClick(e){e.preventDefault();_this.setState({view:'tweeting'});}},\"Tweet\"));};_this.displayTweets=function(){var allTweets=_this.state.allTweets;if(allTweets.length===0)return React.createElement(\"div\",{style:{textAlign:'center'}},React.createElement(\"h1\",null,\"No tweets to show\"));return allTweets.map(function(tweet){return React.createElement(\"div\",{className:\"tweet\"},React.createElement(\"h1\",{className:\"tweet__user\"},tweet.user),tweet.content);});};_this.sendTweetScreen=function(){return React.createElement(\"form\",{onSubmit:_this.submitTweet},React.createElement(\"h1\",null,\"Tweet:\"),React.createElement(\"input\",{className:\"text-input\",type:\"text\",name:\"tweet\",value:_this.state.tweetInput,onChange:function onChange(e){return _this.setState({tweetInput:e.target.value});}}),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"br\",null),React.createElement(\"input\",{className:\"button\",type:\"submit\",value:\"Submit\"}));};_this.login=function(event){event.preventDefault();_this.setState({user:_this.state.usernameInput,view:'viewing'});_this.getAllTweets();};_this.getAllTweets=function(){fetch(BASE_URL+'/getAllTweets').then(function(response){return response.json();}).then(function(myJson){_this.setState({allTweets:myJson.allTweets});});};_this.submitTweet=function(event){event.preventDefault();fetch(BASE_URL+'/tweet',{method:'POST',// or 'PUT'\nheaders:{'Content-Type':'application/json'},body:JSON.stringify({content:_this.state.tweetInput,user:_this.state.user})}).then(function(response){return response.json();}).then(function(data){console.log(data);_this.setState({view:'viewing',allTweets:data.allTweets,tweetInput:''});}).catch(function(error){console.error('Error:',error);});};_this.state={allTweets:[],view:'login',user:null,usernameInput:'',tweetInput:''};return _this;}_createClass(App,[{key:\"render\",value:function render(){return React.createElement(\"div\",null,this.header(),React.createElement(\"div\",{className:\"container\"},this.body()));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/home/owen/pres/bad-twitter/src/App.js"],"names":["React","BASE_URL","App","props","header","state","user","body","view","allTweets","console","log","loginScreen","browsingTweetsScreen","sendTweetScreen","login","usernameInput","e","setState","target","value","displayTweets","preventDefault","length","textAlign","map","tweet","content","submitTweet","tweetInput","event","getAllTweets","fetch","then","response","json","myJson","method","headers","JSON","stringify","data","catch","error","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst BASE_URL = 'http://localhost:8080';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            allTweets: [],\n            view: 'login',\n            user: null,\n            usernameInput: '',\n            tweetInput: ''\n        }\n    }\n\n\n    render() {\n        return (\n            <div>\n                {this.header()}\n                <div className='container'>\n                    {this.body()}\n                </div>\n            </div>\n        )\n    }\n\n    header = () => (\n        <div className='header'>\n            <h1>Welcome to bad-twitter {this.state.user || ''}</h1>\n        </div>\n    );\n\n    body = () => {\n        const {view, allTweets} = this.state;\n        console.log(allTweets);\n        if (view === 'login')\n            return this.loginScreen();\n\n        if (view === 'viewing')\n            return this.browsingTweetsScreen();\n\n        if (view === 'tweeting')\n            return this.sendTweetScreen();\n    };\n\n    loginScreen = () => (\n        <form onSubmit={this.login}>\n            <h1>Username:</h1>\n            <input\n                className='text-input'\n                type=\"text\"\n                name=\"username\"\n                value={this.state.usernameInput}\n                onChange={e => this.setState({usernameInput: e.target.value})}\n            />\n            <br/>\n            <br/>\n            <br/>\n            <input className='button' type=\"submit\" value=\"Submit\"/>\n        </form>\n    );\n\n    browsingTweetsScreen = () => (\n        <div>\n            {this.displayTweets()}\n            <br/>\n            <br/>\n            <br/>\n            <button\n                className='button'\n                onClick={e => {\n                    e.preventDefault();\n                    this.setState({view: 'tweeting'})\n                }}>\n                Tweet\n            </button>\n        </div>\n    );\n\n    displayTweets = () => {\n        const {allTweets} = this.state;\n        if (allTweets.length === 0)\n            return (\n                <div style={{textAlign: 'center'}}>\n                    <h1>No tweets to show</h1>\n                </div>\n            );\n        return allTweets.map(tweet => (\n            <div className='tweet'>\n                <h1 className='tweet__user'>{tweet.user}</h1>\n                {tweet.content}\n            </div>\n        ))\n    };\n\n\n    sendTweetScreen = () => (\n        <form onSubmit={this.submitTweet}>\n            <h1>Tweet:</h1>\n            <input\n                className='text-input'\n                type=\"text\"\n                name=\"tweet\"\n                value={this.state.tweetInput}\n                onChange={e => this.setState({tweetInput: e.target.value})}\n            />\n            <br/>\n            <br/>\n            <br/>\n            <input className='button' type=\"submit\" value=\"Submit\"/>\n        </form>\n    );\n\n    login = (event) => {\n        event.preventDefault();\n        this.setState({\n            user: this.state.usernameInput,\n            view: 'viewing'\n        });\n        this.getAllTweets()\n    };\n\n    getAllTweets = () => {\n        fetch(BASE_URL + '/getAllTweets')\n            .then((response) => {\n                return response.json();\n            })\n            .then((myJson) => {\n                this.setState({allTweets: myJson.allTweets})\n            });\n    };\n\n    submitTweet = (event) => {\n        event.preventDefault();\n\n        fetch(BASE_URL + '/tweet', {\n            method: 'POST', // or 'PUT'\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                content: this.state.tweetInput,\n                user: this.state.user,\n            }),\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                console.log(data)\n                this.setState({view: 'viewing', allTweets: data.allTweets, tweetInput: ''})\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n            });\n    };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}